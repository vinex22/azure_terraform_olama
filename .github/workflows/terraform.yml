name: Terraform Validation and Security Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: 'Terraform Validation'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Validates the configuration files in a directory, referring only to the configuration and not accessing any remote services
    - name: Terraform Validate
      run: terraform validate

    # Generates an execution plan for Terraform (no actual deployment)
    - name: Terraform Plan
      run: terraform plan -var-file="terraform.tfvars.example"
      env:
        TF_VAR_environment: "ci"
        TF_VAR_location: "East US"

  security:
    name: 'Security Testing'
    runs-on: ubuntu-latest
    needs: terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install ShellCheck for shell script security analysis
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck

    # Run tfsec security scanner
    - name: Run tfsec
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        soft_fail: true

    # Run Checkov security scanner
    - name: Run Checkov
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: terraform
        soft_fail: true

    # Run shell script security analysis
    - name: Shell Script Security Analysis
      run: |
        echo "Running ShellCheck on all shell scripts..."
        for script in *.sh; do
          if [ -f "$script" ]; then
            echo "Checking $script..."
            shellcheck "$script" || echo "Issues found in $script"
          fi
        done

    # Run YAML validation
    - name: YAML Validation
      run: |
        python3 -c "
        import yaml
        import sys
        try:
            with open('cloud-init.yaml', 'r') as f:
                yaml.safe_load(f)
            print('✓ cloud-init.yaml is valid')
        except Exception as e:
            print(f'✗ cloud-init.yaml validation failed: {e}')
            sys.exit(1)
        "

    # Run comprehensive security test suite
    - name: Comprehensive Security Testing
      run: |
        chmod +x security-test.sh
        ./security-test.sh

    # Upload security scan results
    - name: Upload tfsec results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: tfsec-results
        path: tfsec-results.json
